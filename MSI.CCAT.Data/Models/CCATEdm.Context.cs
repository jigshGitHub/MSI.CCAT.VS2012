//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSI.CCAT.Data.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CCATDBEntities : DbContext
    {
        public CCATDBEntities()
            : base("name=CCATDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Tbl_QuestionResponse> Tbl_QuestionResponse { get; set; }
        public DbSet<module> modules { get; set; }
        public DbSet<pageMenu> pageMenus { get; set; }
        public DbSet<pageMenuGroup> pageMenuGroups { get; set; }
        public DbSet<TBL_CHART> TBL_CHART { get; set; }
        public DbSet<Tbl_QuestionDeficient> Tbl_QuestionDeficient { get; set; }
        public DbSet<Tbl_Account> Tbl_Account { get; set; }
        public DbSet<Tbl_Agency> Tbl_Agency { get; set; }
        public DbSet<Tbl_ComplaintIssues> Tbl_ComplaintIssues { get; set; }
        public DbSet<Tbl_ComplaintReceivedBy> Tbl_ComplaintReceivedBy { get; set; }
        public DbSet<Tbl_CreditIssuer> Tbl_CreditIssuer { get; set; }
        public DbSet<Tbl_DebtorContactMethods> Tbl_DebtorContactMethods { get; set; }
        public DbSet<Tbl_DebtorContactTime> Tbl_DebtorContactTime { get; set; }
        public DbSet<Tbl_DebtorProducts> Tbl_DebtorProducts { get; set; }
        public DbSet<Tbl_FinalActionSteps> Tbl_FinalActionSteps { get; set; }
        public DbSet<Tbl_LawFirm> Tbl_LawFirm { get; set; }
        public DbSet<Tbl_Owner> Tbl_Owner { get; set; }
        public DbSet<Tbl_OwnerResponses> Tbl_OwnerResponses { get; set; }
        public DbSet<Tbl_States> Tbl_States { get; set; }
        public DbSet<Tbl_ModulesForRoles> Tbl_ModulesForRoles { get; set; }
        public DbSet<Tbl_QuestionBank> Tbl_QuestionBank { get; set; }
        public DbSet<Tbl_QuestionModule> Tbl_QuestionModule { get; set; }
        public DbSet<Tbl_ComplaintMain> Tbl_ComplaintMain { get; set; }
        public DbSet<Tbl_ComplaintStatus> Tbl_ComplaintStatus { get; set; }
        public DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public DbSet<aspnet_Users> aspnet_Users { get; set; }
    
        public virtual ObjectResult<Tbl_Account> GetAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccounts");
        }
    
        public virtual ObjectResult<Tbl_Account> GetAccounts(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccounts", mergeOption);
        }
    
        public virtual ObjectResult<Tbl_Account> GetAccountsByNumber(string accountNumber)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("accountNumber", accountNumber) :
                new ObjectParameter("accountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccountsByNumber", accountNumberParameter);
        }
    
        public virtual ObjectResult<Tbl_Account> GetAccountsByNumber(string accountNumber, MergeOption mergeOption)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("accountNumber", accountNumber) :
                new ObjectParameter("accountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccountsByNumber", mergeOption, accountNumberParameter);
        }
    
        public virtual ObjectResult<Tbl_Account> GetAccountsByAgency(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccountsByAgency", idParameter);
        }
    
        public virtual ObjectResult<Tbl_Account> GetAccountsByAgency(Nullable<int> id, MergeOption mergeOption)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Account>("GetAccountsByAgency", mergeOption, idParameter);
        }
    }
}
